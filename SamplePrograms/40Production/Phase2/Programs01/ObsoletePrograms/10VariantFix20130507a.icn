# This program reads 10Tanach.txt, identifies verses with variants, and splits the
# Tanach into two Tanachs each containing a different variant.

global qereCount, ketivCount, file05

procedure main()

  tanachFileIn   := ".\\zzTanachs\\10Tanach_Lines.txt" # Tanach to be split.
  tanachFileOut  := ".\\yyTanachs\\81Tanach_Lines.txt" # Ketiv Tanach
  tanachFile2Out := ".\\yyTanachs\\82Tanach_Lines.txt" # Qere Tanach
  variantsOut    := ".\\yyTanachs\\80Variants.txt"
  diagnosticsOut := ".\\yyTanachs\\80Diagnostics.txt"
  file01 := open(tanachFileIn,  "r") | stop("Cannot open ",tanachFileIn,  ".")
  file02 := open(tanachFileOut, "w") | stop("Cannot open ",tanachFileOut, ".")
  file03 := open(tanachFile2Out,"w") | stop("Cannot open ",tanachFile2Out,".")
  file04 := open(variantsOut,   "w") | stop("Cannot open ",variantsOut,   ".")
  file05 := open(diagnosticsOut,"w") | stop("Cannot open ",diagnosticsOut,".")

  qereCount := ketivCount := variantCount := 0
  variants := []
  while lineIn := read(file01) do {
    variantFound := 0
#   Check for variants.
    lineIn ? {
      if find("{") then variantFound := 1 # Trigger Character
    }

#   Check for ketivs containing more than one word. 
    lineIn ? {
      while tab(find("{")+1) do {
        if testPhrase := tab(find("|")) then {
          testPhrase ||:= " "
          move(1)
          spaceCount := 0
          testPhrase ? {
            while tab(upto(' ')+1) do {
              spaceCount +:= 1
              if spaceCount > 1 then 
                write(file04,">>>>Multiple ketiv at: ",lineIn) # More than one word 
                                                               # in the variant!
            }
          }
        }
      }
    }

#   Check for qeres containing more than one word. 
    lineIn ? {
      while tab(find("{")+1) do {
        tab(upto('|')+1)
        if testPhrase := tab(find("}")) then {
          testPhrase ||:= " "
          move(1)
          spaceCount := 0
          testPhrase ? {
            while tab(upto(' ')+1) do {
              spaceCount +:= 1
              if spaceCount > 1 then 
                write(file04,">>>>Multiple qere at: ",lineIn) # More than one word 
                                                              # in the variant!
            }
          }
        }
      }
    }

    lineIn ? {
#     Now change the qere marker to "!!", and Fix spaces in the qere.
      part1 := part2 := ""
      while part1 ||:= tab(find("|")) do { # Change "|" to "!!".
        #write(file05,"QB4:",part1)
        part1 ||:= " !!"
        #write(file05,"Aft:",part1)
        move(1)
        if part2 := trim(tab(find("}"))) then {
          move(1)
          part2 ? {
            part3 := ""
            while &pos < *part2 do {
              if part3 ||:= tab(upto(' ')) then {
                tab(many(' '))
                part3 ||:= "~" # Replace a space or spaces with a single tilde.
              }
              else {
                part3 ||:= part2[&pos:0] # Add the remainder.
                break
              }
            }
          }
          part1 ||:= part3
        }
      }
      lineIn := part1 || lineIn[&pos:0] # Add remainder of line.
      #write(file05,"Af2:",lineIn)
    }

    lineIn ? {
#     Now create a ketiv marker of "*".
      part1 := part2 := ""
      while part1 ||:= tab(find("{")) do { # Change "{" to "*".
        part1 ||:= "*"
        move(1)
        if part2 := trim(tab(find("!!"))) then {
          move(2)
          part2 ? {
            part3 := ""
            while &pos < *part2 do {
              if part3 ||:= tab(upto(' ')) then {
                tab(many(' '))
                part3 ||:= "~" # Replace a space or spaces with a single tilde.
              }
              else {
                part3 ||:= part2[&pos:0] # Add the remainder.
                break
              }
            }
          }
          part1 ||:= part3 || " !!"
        }
      }
      lineIn := part1 || lineIn[&pos:0] # Add remainder of line.
    }

    lineIn := removeExcessSpaces(lineIn)

    if variantFound = 0 then { # No variant detected.
#   Write lines that have no variants.
      write(file02,lineIn) 
      write(file03,lineIn) 
    }
    else {
#     Process lines that have variants.
      write(file04,lineIn) # Write variant to variant file.
      variantCount +:= 1
      variants := parseVariant(lineIn)
      var2Saved := variants[2]
      #write("1)",variants[1])
      variants := parseVariant(variants[1])
      #write("2)",variants[1])
      variants := parseVariant(variants[1])
      #write("3)",variants[1])
      write(file02,variants[1])
      variants := parseVariant(var2Saved)
      variants := parseVariant(variants[2])
      write(file03,variants[2])
    }
  }
  write(file04,"The variant count was: ",variantCount,
               " (Verses with one or more variants)") # Write variant count.
  write(file04,"The ketiv count was: ",ketivCount) # Write ketiv count.
  write(file04,"The qere count was: ",qereCount)   # Write qere count.
end

procedure parseVariant(lineIn)
  #write(file05,"PV)",lineIn) # Diagnostic
  lineIn ||:= " "
  firstVariantLine := secondVariantLine := ""

# This section makes the Ketiv line.
  part1 := part2 := tempLine := ""
  lineIn ? { # Remove all the qeres.
    while part2 := tab(find("!!")) do {
      tab(upto(' ')+1) # Skip over the marker and the word and it's space.
      part1 ||:= part2 # Save the line segment.
    }
    tempLine := part1 || lineIn[&pos:0]
  }
  #write(file05,tempLine) # Diagnostic
  part1 := part2 := ""
  tempLine ? { # Remove the ketiv markers.
    while part2 := tab(find("*")) do {
      #write(file05,"part2)",part2)
      move(1) # Skip over the marker.
      part1 ||:= part2 # Save the line segment.
      ketivCount +:= 1
    }
    firstVariantLine := trim(part1 || tempLine[&pos:0])
    firstVariantLine ? { # Replace tildes with spaces.
      while &pos < *firstVariantLine do {
        if tab(upto('~')) then {
          firstVariantLine[&pos:&pos+1] := " " # Replace tilde with space.
        }
        else break
      }
    }
  }

# This section makes the Qere line.
  part1 := part2 := tempLine := ""
  lineIn ? { # Remove all the ketivs.
    while part2 := tab(find("*")) do {
      tab(upto(' ')+1) # Skip over the marker and the word and it's space.
      part1 ||:= part2 # Save the line segment.
    }
    tempLine := part1 || lineIn[&pos:0]
  }
  part1 := part2 := ""
  tempLine ? { # Remove the qere markers.
    while part2 := tab(find("!!")) do {
      move(2) # Skip over the marker.
      part1 ||:= part2 # Save the line segment.
      qereCount +:= 1
    }
    secondVariantLine := trim(part1 || tempLine[&pos:0])
    secondVariantLine ? { # Replace tildes with spaces.
      while &pos < *secondVariantLine do {
        if tab(upto('~')) then {
          secondVariantLine[&pos:&pos+1] := " " # Replace tilde with space.
        }
        else break
      }
    }
  }
  firstVariantLine  := removeExcessSpaces(firstVariantLine)
  secondVariantLine := removeExcessSpaces(secondVariantLine)
  return [firstVariantLine,secondVariantLine]
end

procedure removeExcessSpaces(lineIn)
    lineIn ? {
      part1 := ""
      while (part1 ||:= tab(upto(' '))) do {
        part1 ||:= " "
        tab(many(' '))
      }
      lineIn := part1 || lineIn[&pos:0] # Add remainder of line.
    }
return lineIn
end
