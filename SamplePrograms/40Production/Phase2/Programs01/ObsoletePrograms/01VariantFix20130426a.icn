# This program reads 01Tanach.txt, identifies verses with variants, and splits the
# Tanach into two Tanachs each containing a different variant.

global qereCount, ketivCount, file05

procedure main()

  tanachFileIn   := ".\\zzTanachs\\01Tanach_Lines.txt"
  tanachFileOut  := ".\\yyTanachs\\01Tanach_Lines.txt"
  tanachFile2Out := ".\\yyTanachs\\02Tanach_Lines.txt"
  variantsOut    := ".\\yyTanachs\\00Variants.txt"
  diagnosticsOut := ".\\yyTanachs\\00Diagnostics.txt"
  file01 := open(tanachFileIn,  "r") | stop("Cannot open ",tanachFileIn,  ".")
  file02 := open(tanachFileOut, "w") | stop("Cannot open ",tanachFileOut, ".")
  file03 := open(tanachFile2Out,"w") | stop("Cannot open ",tanachFile2Out,".")
  file04 := open(variantsOut,   "w") | stop("Cannot open ",variantsOut,   ".")
  file05 := open(diagnosticsOut,"w") | stop("Cannot open ",diagnosticsOut,".")

  qereCount := ketivCount := variantCount := 0
  variants := []
  while lineIn := read(file01) do {
    variantFound := 0
    lineIn ? {
      if find("*") then variantFound := 1
    }
    lineIn ? {
      while tab(find("**")) do { # Change "**" to "!!".
        lineIn[&pos:&pos+1] := "!"
        move(1)
        lineIn[&pos:&pos+1] := "!"
        move(1)
      }
      if variantFound = 0 then { # No variant detected.
        write(file02,lineIn) 
        write(file03,lineIn) 
      }
      else {
        write(file04,lineIn) # Write variant to variant file.
        variantCount +:= 1
        variants := parseVariant(lineIn)
        var2Saved := variants[2]
        #write("1)",variants[1])
        variants := parseVariant(variants[1])
        #write("2)",variants[1])
        variants := parseVariant(variants[1])
        #write("3)",variants[1])
        write(file02,variants[1])
        variants := parseVariant(var2Saved)
        variants := parseVariant(variants[2])
        write(file03,variants[2])
      }
    }
  }
  write(file04,"The variant count was: ",variantCount,
               " (Verses with one or more variants)") # Write variant count.
  write(file04,"The ketiv count was: ",ketivCount) # Write ketiv count.
  write(file04,"The qere count was: ",qereCount)   # Write qere count.
end

procedure parseVariant(lineIn)
  write(file05,"PV)",lineIn)
  lineIn ||:= " "
  firstVariantLine := secondVariantLine := ""

# This section makes the Ketiv line.
  part1 := part2 := tempLine := ""
  lineIn ? { # Remove all the qeres.
    while part2 := tab(find("!!")) do {
      tab(upto(' ')+1) # Skip over the marker and the word and it's space.
      part1 ||:= part2 # Save the line segment.
    }
    tempLine := part1 || lineIn[&pos:0]
  }
  write(file05,tempLine)
  part1 := part2 := ""
  tempLine ? { # Remove the ketiv markers.
    while part2 := tab(find("*")) do {
      write(file05,"part2)",part2)
      move(1) # Skip over the marker.
      part1 ||:= part2 # Save the line segment.
      ketivCount +:= 1
    }
    firstVariantLine := trim(part1 || tempLine[&pos:0])
  }

# This section makes the Qere line.
  part1 := part2 := tempLine := ""
  lineIn ? { # Remove all the ketivs.
    while part2 := tab(find("*")) do {
      tab(upto(' ')+1) # Skip over the marker and the word and it's space.
      part1 ||:= part2 # Save the line segment.
    }
    tempLine := part1 || lineIn[&pos:0]
  }
  part1 := part2 := ""
  tempLine ? { # Remove the qere markers.
    while part2 := tab(find("!!")) do {
      move(2) # Skip over the marker.
      part1 ||:= part2 # Save the line segment.
      qereCount +:= 1
    }
    secondVariantLine := trim(part1 || tempLine[&pos:0])
  }

  return [firstVariantLine,secondVariantLine]
end

