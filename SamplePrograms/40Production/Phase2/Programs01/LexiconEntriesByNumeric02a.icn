# This program produces a report of all Strong's entries for a particular numeric value.
# The numeric value must be entered as a parameter on the command line.

global strongsLexicon, file02
procedure main(args)

  searchParm := ("0000" || args[1])[-4:0]
  outputFileName := "LexiconReportByNumberValues_" || searchParm || ".txt"

  file00 := open("StrongsHebrewLexiconUnicodeReformatted.txt","r") |
            stop("Can't open StrongsHebrewLexiconUnicodeReformatted.txt.")
  file01 := open("StrongsHebrewLexiconByNumberValues.txt","r") |
            stop("Can't open StrongsHebrewLexiconByNumberValues.txt.")
  file02 := open(outputFileName,"w") |
            stop("Can't open ",outputFileName,".")
  write("Searching for the number value ",searchParm,".")
  write(file02,"Searching for the number value ",searchParm,".")

  strongsLexicon := table("")
  while (lineIn := read(file00)) do {
    strongsNumber := lineIn[1:8]
    strongsLexicon[strongsNumber] := lineIn
  }
  close(file00)

  count := 0
  while (lineIn := read(file01)) do {
    if (lineIn[1:5] == searchParm) then {
      origStrongsNumber := lineIn[7:14]
      subNumber := 0
      strongsNumber := lineIn[7:13] || subNumber
      while (*strongsLexicon[strongsNumber] > 1) do {
        if (strongsNumber == origStrongsNumber) then {write(file02,">",strongsLexicon[strongsNumber])} 
                                                else {write(file02,"  ",strongsLexicon[strongsNumber])}
        subEntry(strongsLexicon[strongsNumber])
        if subNumber = 0 then count +:= 1
        subNumber +:= 1
        strongsNumber := lineIn[7:13] || subNumber
      }
    }
  }
  write("The number of entries found was ",count,".")
  write(file02,"The number of entries found was ",count,".")
end

procedure subEntry(lexiconIn)
  lexiconIn := trim(lexiconIn)
  #write(file02,"### ",lexiconIn)
  testLength := *lexiconIn + 1
  #write(file02,"testLength =",testLength)
  lexiconIn ? {
    while (&pos < testLength) do {
      #write(file02,"&pos =",&pos," testLength =",testLength)
      if tab(upto('S')) then {
        if match("See") then {tab(upto(&digits))
          strongsNumber := ("0000" || (tab(many(&digits))) || ".0")[-7:0]
          move(1)
          if (&pos = testLength) then {write(file02,"  ...",strongsLexicon[strongsNumber])}
        }
        else {
          move(1)
        }
      }
      else {
        tab(0)
      }
    }
  }
end
